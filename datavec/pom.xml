<?xml version="1.0" encoding="UTF-8"?>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  ~ Copyright (c) 2015-2018 Skymind, Inc.
  ~ Copyright (c) 2020 Konduit K.K.
  ~
  ~ This program and the accompanying materials are made available under the
  ~ terms of the Apache License, Version 2.0 which is available at
  ~ https://www.apache.org/licenses/LICENSE-2.0.
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  ~ WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  ~ License for the specific language governing permissions and limitations
  ~ under the License.
  ~
  ~ SPDX-License-Identifier: Apache-2.0
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.deeplearning4j</groupId>
        <artifactId>deeplearning4j</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <groupId>org.datavec</groupId>
    <artifactId>datavec-parent</artifactId>
    <packaging>pom</packaging>

    <name>DataVec</name>
    <description>Vectorization Rosetta Stone for the JVM</description>

    <developers>
        <developer>
            <id>agibsonccc</id>
            <name>Adam Gibson</name>
            <email>0@blix.io</email>
        </developer>
        <developer>
            <id>jpatanooga</id>
            <name>Josh Patterson</name>
            <email>josh@floe.tv</email>
        </developer>
    </developers>

    <modules>
        <module>datavec-api</module>
        <module>datavec-data</module>
        <module>datavec-spark</module>
        <module>datavec-local</module>
        <module>datavec-spark-inference-parent</module>
        <module>datavec-jdbc</module>
        <module>datavec-excel</module>
        <module>datavec-arrow</module>
        <module>datavec-python</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${jodatime.version}</version>
            </dependency>
            <!-- ND4J common, mainly for CompactHeapStringList -->
            <dependency>
                <groupId>org.nd4j</groupId>
                <artifactId>nd4j-common</artifactId>
                <version>${nd4j.version}</version>
            </dependency>
            <!-- ND4J api, mainly for NDArrayWritable and recognizing an INDArray in UnsafeWritableInjector -->
            <dependency>
                <groupId>org.nd4j</groupId>
                <artifactId>nd4j-api</artifactId>
                <version>${nd4j.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.nd4j</groupId>
            <artifactId>nd4j-common-tests</artifactId>
            <version>${nd4j.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <extensions>
            <extension>
                <groupId>org.kuali.maven.wagons</groupId>
                <artifactId>maven-s3-wagon</artifactId>
                <version>1.2.1</version>
            </extension>
        </extensions>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>test</phase>
                            <id>enforce-test-resources</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <skip>${skipTestResourceEnforcement}</skip>
                                <rules>
                                    <requireActiveProfile>
                                        <profiles>test-nd4j-native,test-nd4j-cuda-11.0</profiles>
                                        <all>false</all>
                                    </requireActiveProfile>
                                </rules>
                                <fail>true</fail>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <argLine>-Ddtype=float -Dfile.encoding=UTF-8</argLine>
                        <!--
                        By default: Surefire will set the classpath based on the manifest. Because tests are not included
                        in the JAR, any tests that rely on class path scanning for resources in the tests directory will not
                        function correctly without this configuration.
                        For example, tests for custom transforms (where the custom transform is defined in the test directory)
                        will fail due to the custom transform not being found on the classpath.
                        http://maven.apache.org/surefire/maven-surefire-plugin/examples/class-loading.html
                        -->
                        <useSystemClassLoader>true</useSystemClassLoader>
                        <useManifestOnlyJar>false</useManifestOnlyJar>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.lewisd</groupId>
                <artifactId>lint-maven-plugin</artifactId>
                <version>${maven-lint-plugin.version}</version>
                <configuration>
                    <failOnViolation>true</failOnViolation>
                    <onlyRunRules>
                        <rule>DuplicateDep</rule>
                        <rule>RedundantDepVersion</rule>
                        <rule>RedundantPluginVersion</rule>
                        <!-- Rules incompatible with Java 9
                        <rule>VersionProp</rule>
                        <rule>DotVersionProperty</rule> -->
                    </onlyRunRules>
                    <xmlOutputFile>${project.build.directory}/maven-lint-result.xml</xmlOutputFile>
                </configuration>
                <executions>
                    <execution>
                        <id>pom-lint</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>net.revelc.code.formatter</groupId>
                <artifactId>formatter-maven-plugin</artifactId>
                <configuration>
                    <directories>
                        <directory>datavec-api</directory>
                        <directory>datavec-arrow</directory>
                        <directory>datavec-data</directory>
                        <directory>datavec-excel</directory>
                        <directory>datavec-jdbc</directory>
                        <directory>datavec-local</directory>
                        <directory>datavec-python</directory>
                        <directory>datavec-spark</directory>
                        <directory>datavec-spark-inference-parent</directory>
                    </directories>
                </configuration>
            </plugin>
            <!-- Configuration for git-commit-id plugin - used with ND4J version check functionality -->
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
            </plugin>
            <!-- Add generated git.properties files resource directory, for output of git-commit-id plugin -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>test-nd4j-native</id>
            <dependencies>
                <dependency>
                    <groupId>org.nd4j</groupId>
                    <artifactId>nd4j-native</artifactId>
                    <version>${nd4j.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.deeplearning4j</groupId>
                    <artifactId>dl4j-test-resources</artifactId>
                    <version>${nd4j.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>test-nd4j-cuda-11.0</id>
            <dependencies>
                <dependency>
                    <groupId>org.nd4j</groupId>
                    <artifactId>nd4j-cuda-11.0</artifactId>
                    <version>${nd4j.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.deeplearning4j</groupId>
                    <artifactId>dl4j-test-resources</artifactId>
                    <version>${nd4j.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
</project>
